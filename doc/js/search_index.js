var search_data = {"index":{"searchIndex":["jmeter","getcompleted()","getfullstatus()","getoutputfiles()","getstarted()","gettestid()","new()","to_s()","license","redline13.gemspec"],"longSearchIndex":["jmeter","jmeter#getcompleted()","jmeter#getfullstatus()","jmeter#getoutputfiles()","jmeter#getstarted()","jmeter#gettestid()","jmeter::new()","jmeter#to_s()","",""],"info":[["JMeter","","JMeter.html","","<p>This class creates a Redline13 Jmeter test and provides methods for\nchecking status and retrieving output …\n"],["getCompleted","JMeter","JMeter.html#method-i-getCompleted","()","<p>Returns test completed time. Returns nil if dry_run or test not yet\ncompleted.\n"],["getFullStatus","JMeter","JMeter.html#method-i-getFullStatus","()","<p>Returns full test status from Redline13\n"],["getOutputFiles","JMeter","JMeter.html#method-i-getOutputFiles","()","<p>Returns list of output files. Returns nil if test not completed or output\nfile number doesn&#39;t matche …\n"],["getStarted","JMeter","JMeter.html#method-i-getStarted","()","<p>Returns test start time. Returns nil if dry_run or test not yet started\n"],["getTestId","JMeter","JMeter.html#method-i-getTestId","()","<p>Returns test ID. Returns nil if dry_run or API error.\n"],["new","JMeter","JMeter.html#method-c-new","(key, aws_keypair_id, name, file, num_servers, servers, jvm_args = [], jmeter_opts = {}, ubik_stream_plugin = false, ubik_license_file = nil, dry_run = true)","<p>Instantiation of this class results in a new load test.\n<p>Required Parameters:\n<p>key &mdash; Redline13 API Key\n"],["to_s","JMeter","JMeter.html#method-i-to_s","()","<p>Returns full definition of parameters for API call\n"],["LICENSE","","LICENSE.html","","<p>MIT License\n<p>Copyright © 2017 Matt Williams\n<p>Permission is hereby granted, free of charge, to any person …\n"],["redline13.gemspec","","redline13_gemspec.html","","<p>Gem::Specification.new do |s|\n\n<pre>s.name        = &#39;redline13&#39;\ns.version     = &#39;0.1.0&#39;\ns.date        = &#39;2017-06-21&#39; ...</pre>\n"]]}}